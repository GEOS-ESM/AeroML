# inputs

dict(
# list of giant files
    giantFile = ('/nobackup/NNR/Training/002/giant_C002_10km_SNPP_v3.0_201[2-9]*nc',
                  '/nobackup/NNR/Training/002/giant_C002_10km_SNPP_v3.0_202[0-3]*nc'),

# MERRRA-2 sampled input files
    aerFile = ('/nobackup/NNR/Training/002/giant_C002_10km_SNPP_v3.0_201[2-9]*MERRA2*npz',
                '/nobackup/NNR/Training/002/giant_C002_10km_SNPP_v3.0_202[0-3]*MERRA2*npz'),

# tymemax sets a truncation date when reading in giant file
# string with format YYYYMMDD
# None reads the entire datarecord
    tymemax = None,

# how many std dev to use for outlier removal. If < 0, don't do outlier removal
# default is 3
    outliers = 3,

# number of hidden layers
    nHLayers = 1,

# number of nodes in hidden layers
# None uses the default of 200 coded in nn.py
    nHidden = None,

# do training on combinations of the inputs
    combinations = False,

# number of K-folds or training
# if None does not do K-folding, trains on entire dataset
    K            = None,

# Flags to Train or Test the DARK TARGET DATASET
    doTrain      = True,
    doTest       = True,

# experiment name
    expid        = 'candidate_noturbid_nowato3_linputs_combi_downselect_2outputsAEfitm_002',

# NN target variable name
    Target = ['aTau550','aAEfitm'],

# surface albedo variable name
# options are None, ['CoxMunkLUT'], or ['CxAlbedo']
# if CoxMunkLUT one needs to provide the coxmunk_lut option to ABC_Ocean,
# otherwise default is used (default = '/nobackup/NNR/Misc/coxmunk_lut.npz')
# if CxAlbedo is used, need to provide a *npz file with CxAlbedo precalculated
    Albedo  = None,

# Inputs that are always included in combinations
# this can be None
    Input_const = None,

# Inputs that can be varied across combinations
# if combinations flag is False, all of these inputs are used
# if combinations flag is True, all possible combinations of these inputs
# are tried

    Input_nnr    = ['SolarZenith','ScatteringAngle', 'GlintAngle',
                   'lfdu','lfcc','lfss',
                   'lmRef412','lmRef488','lmRef550','lmRef670', 'lmRef865','lmRef1240','lmRef2250'],

# Inputs I want to the the log-transform of
    lInput_nnr = ['mRef412','mRef488','mRef550','mRef670', 'mRef865','mRef1240','mRef1640','mRef2250',
                  'fdu','fcc','fss'],

# Additional variables that the inputs are filtered by
# standard filters are hardcoded in the abc_c6.py scripts
    aFilter      = ['aTau440','aTau470','aTau500','aTau550','aTau660','aTau870'] +\
                   ['colO3'] +\
                   ['water'],

# fraction that defines whether a pixel is dominated by a species
# if not set as an input
# if less than 0, will not do balancing
    f_balance = 0.5,
)

